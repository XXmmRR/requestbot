"""Добавление новых таблиц

Revision ID: ab0c41a02b46
Revises: 
Create Date: 2025-09-08 16:31:32.975987

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ab0c41a02b46'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance', sa.Float(), nullable=False),
    sa.Column('tg_id', sa.BigInteger(), nullable=False),
    sa.Column('mention', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_account_mention'), 'user_account', ['mention'], unique=False)
    op.create_index(op.f('ix_user_account_tg_id'), 'user_account', ['tg_id'], unique=False)
    op.create_table('entries',
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('name_key', sa.String(), nullable=False),
    sa.Column('aliases', sa.JSON(), nullable=False),
    sa.Column('region', sa.String(), nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('merged_into', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by'], ['user_account.id'], ),
    sa.ForeignKeyConstraint(['merged_into'], ['entries.entry_id'], ),
    sa.PrimaryKeyConstraint('entry_id')
    )
    op.create_index(op.f('ix_entries_created_by'), 'entries', ['created_by'], unique=False)
    op.create_index(op.f('ix_entries_merged_into'), 'entries', ['merged_into'], unique=False)
    op.create_index(op.f('ix_entries_name_key'), 'entries', ['name_key'], unique=False)
    op.create_index(op.f('ix_entries_region'), 'entries', ['region'], unique=False)
    op.create_index(op.f('ix_entries_status'), 'entries', ['status'], unique=False)
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('kind', sa.String(), nullable=False),
    sa.Column('payload', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('fail_reason', sa.String(), nullable=True),
    sa.Column('sent_at', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_notifications_kind'), 'notifications', ['kind'], unique=False)
    op.create_index(op.f('ix_notifications_sent_at'), 'notifications', ['sent_at'], unique=False)
    op.create_index(op.f('ix_notifications_status'), 'notifications', ['status'], unique=False)
    op.create_index(op.f('ix_notifications_user_id'), 'notifications', ['user_id'], unique=False)
    op.create_table('payments',
    sa.Column('payment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('invoice_id', sa.String(), nullable=False),
    sa.Column('sku', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('currency', sa.String(), nullable=False),
    sa.Column('provider', sa.String(), nullable=False),
    sa.Column('provider_payload', sa.JSON(), nullable=False),
    sa.Column('signature_ok', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('order_id', sa.String(), nullable=False),
    sa.Column('paid_at', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('payment_id')
    )
    op.create_index(op.f('ix_payments_currency'), 'payments', ['currency'], unique=False)
    op.create_index(op.f('ix_payments_invoice_id'), 'payments', ['invoice_id'], unique=False)
    op.create_index(op.f('ix_payments_order_id'), 'payments', ['order_id'], unique=False)
    op.create_index(op.f('ix_payments_paid_at'), 'payments', ['paid_at'], unique=False)
    op.create_index(op.f('ix_payments_provider'), 'payments', ['provider'], unique=False)
    op.create_index(op.f('ix_payments_sku'), 'payments', ['sku'], unique=False)
    op.create_index(op.f('ix_payments_status'), 'payments', ['status'], unique=False)
    op.create_index(op.f('ix_payments_type'), 'payments', ['type'], unique=False)
    op.create_index(op.f('ix_payments_user_id'), 'payments', ['user_id'], unique=False)
    op.create_table('referrals',
    sa.Column('ref_id', sa.Integer(), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('invitee_id', sa.Integer(), nullable=False),
    sa.Column('rewarded_at', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['invitee_id'], ['user_account.id'], ),
    sa.ForeignKeyConstraint(['inviter_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('ref_id')
    )
    op.create_index(op.f('ix_referrals_invitee_id'), 'referrals', ['invitee_id'], unique=False)
    op.create_index(op.f('ix_referrals_inviter_id'), 'referrals', ['inviter_id'], unique=False)
    op.create_index(op.f('ix_referrals_rewarded_at'), 'referrals', ['rewarded_at'], unique=False)
    op.create_index(op.f('ix_referrals_status'), 'referrals', ['status'], unique=False)
    op.create_table('events',
    sa.Column('event_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('ts', sa.String(), nullable=False),
    sa.Column('session_id', sa.String(), nullable=True),
    sa.Column('entry_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('order_id', sa.String(), nullable=True),
    sa.Column('latency_ms', sa.BigInteger(), nullable=True),
    sa.Column('error_code', sa.String(), nullable=True),
    sa.Column('version', sa.String(), nullable=False),
    sa.Column('event_metadata', sa.JSON(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.entry_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('event_id')
    )
    op.create_index(op.f('ix_events_entry_id'), 'events', ['entry_id'], unique=False)
    op.create_index(op.f('ix_events_error_code'), 'events', ['error_code'], unique=False)
    op.create_index(op.f('ix_events_order_id'), 'events', ['order_id'], unique=False)
    op.create_index(op.f('ix_events_session_id'), 'events', ['session_id'], unique=False)
    op.create_index(op.f('ix_events_ts'), 'events', ['ts'], unique=False)
    op.create_index(op.f('ix_events_type'), 'events', ['type'], unique=False)
    op.create_index(op.f('ix_events_user_id'), 'events', ['user_id'], unique=False)
    op.create_table('evidence',
    sa.Column('evidence_id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('file_ref', sa.String(), nullable=False),
    sa.Column('kind', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.entry_id'], ),
    sa.PrimaryKeyConstraint('evidence_id')
    )
    op.create_index(op.f('ix_evidence_entry_id'), 'evidence', ['entry_id'], unique=False)
    op.create_index(op.f('ix_evidence_file_ref'), 'evidence', ['file_ref'], unique=False)
    op.create_index(op.f('ix_evidence_kind'), 'evidence', ['kind'], unique=False)
    op.create_table('queries',
    sa.Column('query_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('result_level', sa.String(), nullable=False),
    sa.Column('charged', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.entry_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('query_id')
    )
    op.create_index(op.f('ix_queries_entry_id'), 'queries', ['entry_id'], unique=False)
    op.create_index(op.f('ix_queries_result_level'), 'queries', ['result_level'], unique=False)
    op.create_index(op.f('ix_queries_user_id'), 'queries', ['user_id'], unique=False)
    op.create_table('tickets',
    sa.Column('ticket_id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('submitted_by', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('reason', sa.String(), nullable=False),
    sa.Column('moderator_id', sa.Integer(), nullable=True),
    sa.Column('notes', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.entry_id'], ),
    sa.ForeignKeyConstraint(['moderator_id'], ['user_account.id'], ),
    sa.ForeignKeyConstraint(['submitted_by'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('ticket_id')
    )
    op.create_index(op.f('ix_tickets_entry_id'), 'tickets', ['entry_id'], unique=False)
    op.create_index(op.f('ix_tickets_moderator_id'), 'tickets', ['moderator_id'], unique=False)
    op.create_index(op.f('ix_tickets_status'), 'tickets', ['status'], unique=False)
    op.create_index(op.f('ix_tickets_submitted_by'), 'tickets', ['submitted_by'], unique=False)
    op.create_table('watchlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('entry_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['entry_id'], ['entries.entry_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user_account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_watchlist_created_at'), 'watchlist', ['created_at'], unique=False)
    op.create_index(op.f('ix_watchlist_entry_id'), 'watchlist', ['entry_id'], unique=False)
    op.create_index(op.f('ix_watchlist_user_id'), 'watchlist', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_watchlist_user_id'), table_name='watchlist')
    op.drop_index(op.f('ix_watchlist_entry_id'), table_name='watchlist')
    op.drop_index(op.f('ix_watchlist_created_at'), table_name='watchlist')
    op.drop_table('watchlist')
    op.drop_index(op.f('ix_tickets_submitted_by'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_status'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_moderator_id'), table_name='tickets')
    op.drop_index(op.f('ix_tickets_entry_id'), table_name='tickets')
    op.drop_table('tickets')
    op.drop_index(op.f('ix_queries_user_id'), table_name='queries')
    op.drop_index(op.f('ix_queries_result_level'), table_name='queries')
    op.drop_index(op.f('ix_queries_entry_id'), table_name='queries')
    op.drop_table('queries')
    op.drop_index(op.f('ix_evidence_kind'), table_name='evidence')
    op.drop_index(op.f('ix_evidence_file_ref'), table_name='evidence')
    op.drop_index(op.f('ix_evidence_entry_id'), table_name='evidence')
    op.drop_table('evidence')
    op.drop_index(op.f('ix_events_user_id'), table_name='events')
    op.drop_index(op.f('ix_events_type'), table_name='events')
    op.drop_index(op.f('ix_events_ts'), table_name='events')
    op.drop_index(op.f('ix_events_session_id'), table_name='events')
    op.drop_index(op.f('ix_events_order_id'), table_name='events')
    op.drop_index(op.f('ix_events_error_code'), table_name='events')
    op.drop_index(op.f('ix_events_entry_id'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_referrals_status'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_rewarded_at'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_inviter_id'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_invitee_id'), table_name='referrals')
    op.drop_table('referrals')
    op.drop_index(op.f('ix_payments_user_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_type'), table_name='payments')
    op.drop_index(op.f('ix_payments_status'), table_name='payments')
    op.drop_index(op.f('ix_payments_sku'), table_name='payments')
    op.drop_index(op.f('ix_payments_provider'), table_name='payments')
    op.drop_index(op.f('ix_payments_paid_at'), table_name='payments')
    op.drop_index(op.f('ix_payments_order_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_invoice_id'), table_name='payments')
    op.drop_index(op.f('ix_payments_currency'), table_name='payments')
    op.drop_table('payments')
    op.drop_index(op.f('ix_notifications_user_id'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_status'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_sent_at'), table_name='notifications')
    op.drop_index(op.f('ix_notifications_kind'), table_name='notifications')
    op.drop_table('notifications')
    op.drop_index(op.f('ix_entries_status'), table_name='entries')
    op.drop_index(op.f('ix_entries_region'), table_name='entries')
    op.drop_index(op.f('ix_entries_name_key'), table_name='entries')
    op.drop_index(op.f('ix_entries_merged_into'), table_name='entries')
    op.drop_index(op.f('ix_entries_created_by'), table_name='entries')
    op.drop_table('entries')
    op.drop_index(op.f('ix_user_account_tg_id'), table_name='user_account')
    op.drop_index(op.f('ix_user_account_mention'), table_name='user_account')
    op.drop_table('user_account')
    # ### end Alembic commands ###
