services:
  db:
    image: postgres:16.10
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - .env
    restart: always

  redis:
    image: redis:8.2.1
    volumes:
      - redis_data:/data
    env_file:
      - .env
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: always

  bot:
    build: .
    command: python3 main.py
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_started
    volumes:
      - logs_data:/app/logs
      - ./database/alembic/versions:/app/database/alembic/versions
      - ./database/alembic/env.py:/app/database/alembic/env.py
    env_file:
      - .env
    environment:
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    restart: always

volumes:
  pgdata:
  redis_data:
  logs_data: